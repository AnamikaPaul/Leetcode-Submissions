{"id":463685547,"lang":"java","time":"9 months, 2 weeks","timestamp":1614910932,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/463685547/","is_pending":"Not Pending","title":"3Sum","memory":"42.6 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(nums);\n        \n        for(int i=0; i<nums.length && nums[i]<=0;++i){\n            if(i==0 || nums[i-1]!= nums[i]){\n                twoSum(nums, i, res);\n            }\n        }\n        return res;\n    }\n    \n    void twoSum(int[] nums, int i, List<List<Integer>> res)\n    {\n        int lo=i+1, hi=nums.length-1;\n        while(lo<hi)\n        {\n            int sum= nums[i]+nums[lo]+ nums[hi];\n            if(sum<0)\n                ++lo;\n            else if(sum>0)\n                --hi; \n            else \n            {\n                res.add(Arrays.asList(nums[i], nums[lo++], nums[hi--]));\n                while(lo<hi && nums[lo]==nums[lo-1])\n                    ++lo;\n            }\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}
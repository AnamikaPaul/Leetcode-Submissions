{"id":583715854,"lang":"java","time":"1 month, 1 week","timestamp":1636335449,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/583715854/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"39.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverse(ListNode head){\n        if(head==null && head.next==null) return head; \n        \n        ListNode prev=null; \n        ListNode curr= head;\n         \n        while(curr!=null)\n        {\n           ListNode temp= curr.next; \n           curr.next= prev;\n           prev=curr; \n           curr=temp;\n    \n        }\n    return prev;\n     \n        \n    }\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        if( l1==null && l2==null) return null;\n        else if(l1==null && l2!=null) return l2;\n         else if(l1!=null && l2==null) return l1; \n        \n        l1= reverse(l1);\n        l2=reverse(l2);\n        ListNode head= null; \n        \n        int carry=0;\n        while(l1!=null || l2!=null)\n        {\n        int sum=carry; \n        if(l1!=null) sum+=l1.val;\n         if(l2!=null) sum+=l2.val;\n        \n        carry= sum/10;\n        ListNode curr= new ListNode(sum%10);\n        curr.next=head;\n        head=curr;\n        \n        if(l1!=null) l1=l1.next;\n         if(l2!=null) l2=l2.next;\n                    \n        }\n        if(carry>0)\n        {\n       ListNode curr= new ListNode(carry);\n        curr.next=head;\n        head=curr;\n        }\n        \n        return head;\n        \n        \n    }\n}","compare_resulttitle_slug":"add-two-numbers-ii"}
{"id":566976666,"lang":"java","time":"2 months, 1 week","timestamp":1633552359,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/566976666/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"40.7 MB","code":"class Solution {\n    \n    public void dfs(int[][] graph,List<List<Integer>> paths,List<Integer> path, int start, int end ){\n    \n        path.add(start);\n        for(int node: graph[start])\n            dfs(graph, paths, path,node,end);\n        \n        if(start==end)\n             paths.add(new ArrayList<>(path));\n            \n        path.remove(path.size()-1);\n    \n    }\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        List<List<Integer>> paths= new ArrayList<>();\n        List<Integer> path= new ArrayList<>();\n        \n        dfs(graph, paths, path, 0,graph.length-1);\n        \n        return paths; \n        \n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target"}